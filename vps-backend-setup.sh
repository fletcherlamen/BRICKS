#!/bin/bash

echo "üîß VPS Backend Setup Script"
echo "=========================="
echo ""
echo "This script helps you configure the VPS backend to connect to the VPS database."
echo ""

# VPS Database Configuration from .env file
DATABASE_URL="postgresql://user:password@64.227.99.111:5432/brick_orchestration"
VPS_IP="64.227.99.111"
VPS_BACKEND_PORT="8000"

echo "üìã Configuration Details:"
echo "  VPS Backend: $VPS_IP:$VPS_BACKEND_PORT"
echo "  VPS Database: $DATABASE_URL"
echo ""

echo "üîß Required Environment Variables for VPS Backend:"
echo "=================================================="
echo "DATABASE_URL=$DATABASE_URL"
echo "ENVIRONMENT=production"
echo "DEBUG=false"
echo "LOG_LEVEL=INFO"
echo "CORS_ALLOW_ALL_ORIGINS=true"
echo "VPS_IP=$VPS_IP"
echo "VPS_FRONTEND_PORT=3000"
echo "VPS_BACKEND_PORT=$VPS_BACKEND_PORT"
echo ""

echo "üìù Steps to Configure VPS Backend:"
echo "=================================="
echo "1. SSH into your VPS server:"
echo "   ssh root@$VPS_IP"
echo ""
echo "2. Navigate to your backend directory on the VPS"
echo ""
echo "3. Create or update the .env file on the VPS with the above environment variables"
echo ""
echo "4. If using Docker on VPS, update docker-compose.yml to use the .env file:"
echo "   env_file:"
echo "     - .env"
echo ""
echo "5. Restart the VPS backend service:"
echo "   docker compose restart backend"
echo ""
echo "6. Test the connection:"
echo "   curl http://$VPS_IP:$VPS_BACKEND_PORT/api/v1/database/health"
echo ""

echo "‚úÖ Expected Result:"
echo "  {\"status\":\"healthy\",\"message\":\"Database connection successful\",...}"
echo ""

echo "üéØ Once configured, the data flow will be:"
echo "  Frontend ‚Üí VPS Backend ($VPS_IP:$VPS_BACKEND_PORT) ‚Üí VPS Database (64.227.99.111:5432)"
