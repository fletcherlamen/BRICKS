services:
  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: brick_orchestration_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - brick_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: brick_orchestration_backend
    environment:
      # Database URL - VPS PostgreSQL database
      - DATABASE_URL=${DATABASE_URL:-postgresql://user:password@64.227.99.111:5432/brick_orchestration}
      # Redis URL
      - REDIS_URL=redis://redis:6379
      # Environment settings
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      # VPS Configuration
      - VPS_IP=${VPS_IP:-64.227.99.111}
      - VPS_FRONTEND_PORT=${VPS_FRONTEND_PORT:-3000}
      - VPS_BACKEND_PORT=${VPS_BACKEND_PORT:-8000}
      - VPS_HTTP_PORT=${VPS_HTTP_PORT:-80}
      - VPS_HTTPS_PORT=${VPS_HTTPS_PORT:-443}
      - VPS_DOMAIN=${VPS_DOMAIN:-64.227.99.111}
      # CORS Configuration
      - CORS_ALLOW_ALL_ORIGINS=${CORS_ALLOW_ALL_ORIGINS:-false}
    env_file:
      - env.unified
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/venv
    networks:
      - brick_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://64.227.99.111:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: brick_orchestration_frontend
    ports:
      - "3000:3000"
    environment:
      # API URL - VPS endpoints
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://64.227.99.111:8000}
      - REACT_APP_ENVIRONMENT=${ENVIRONMENT:-production}
      - REACT_APP_VPS_IP=${VPS_IP:-64.227.99.111}
      - REACT_APP_VPS_BACKEND_PORT=${VPS_BACKEND_PORT:-8000}
      - REACT_APP_VPS_FRONTEND_PORT=${VPS_FRONTEND_PORT:-3000}
      - HOST=0.0.0.0
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
      - PORT=3000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - brick_network
    restart: unless-stopped
    depends_on:
      - backend

volumes:
  redis_data:

networks:
  brick_network:
    driver: bridge
